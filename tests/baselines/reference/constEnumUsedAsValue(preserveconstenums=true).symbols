//// [tests/cases/compiler/constEnumUsedAsValue.ts] ////

=== constEnumUsedAsValue.ts ===
const enum E {
>E : Symbol(E, Decl(constEnumUsedAsValue.ts, 0, 0))

    A,
>A : Symbol(E.A, Decl(constEnumUsedAsValue.ts, 0, 14))

    B,
>B : Symbol(E.B, Decl(constEnumUsedAsValue.ts, 1, 6))

    C,
>C : Symbol(E.C, Decl(constEnumUsedAsValue.ts, 2, 6))
}

declare const x: E;
>x : Symbol(x, Decl(constEnumUsedAsValue.ts, 6, 13))
>E : Symbol(E, Decl(constEnumUsedAsValue.ts, 0, 0))

E;
>E : Symbol(E, Decl(constEnumUsedAsValue.ts, 0, 0))

E[x];
>E : Symbol(E, Decl(constEnumUsedAsValue.ts, 0, 0))
>x : Symbol(x, Decl(constEnumUsedAsValue.ts, 6, 13))

