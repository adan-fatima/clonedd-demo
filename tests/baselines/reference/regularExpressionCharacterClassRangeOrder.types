//// [tests/cases/compiler/regularExpressionCharacterClassRangeOrder.ts] ////

=== regularExpressionCharacterClassRangeOrder.ts ===
// The characters in the following regular expressions are ASCII-lookalike characters found in Unicode, including:
// - 𝘈 (U+1D608 Mathematical Sans-Serif Italic Capital A)
// - 𝘡 (U+1D621 Mathematical Sans-Serif Italic Capital Z)
//
// See https://en.wikipedia.org/wiki/Mathematical_Alphanumeric_Symbols

/[𝘈-𝘡][𝘡-𝘈]/;
>/[𝘈-𝘡][𝘡-𝘈]/ : RegExp<["��" | "𝘡" | "𝘈" | "��" | "��" | "��" | "��" | "��" | "��"], undefined, { hasIndices: false; global: false; ignoreCase: false; multiline: false; dotAll: false; unicode: false; unicodeSets: false; sticky: false; }>
>                 : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

/[𝘈-𝘡][𝘡-𝘈]/u;
>/[𝘈-𝘡][𝘡-𝘈]/u : RegExp<["𝘈𝘡" | "𝘉𝘡" | "𝘊𝘡" | "𝘋𝘡" | "𝘌𝘡" | "𝘍𝘡" | "𝘎𝘡" | "𝘏𝘡" | "𝘐𝘡" | "𝘑𝘡" | "𝘒𝘡" | "𝘓𝘡" | "𝘔𝘡" | "𝘕𝘡" | "𝘖𝘡" | "𝘗𝘡" | "𝘘𝘡" | "𝘙𝘡" | "𝘚𝘡" | "𝘛𝘡" | "𝘜𝘡" | "𝘝𝘡" | "𝘞𝘡" | "𝘟𝘡" | "𝘠𝘡" | "𝘡𝘡"], undefined, { hasIndices: false; global: false; ignoreCase: false; multiline: false; dotAll: false; unicode: true; unicodeSets: false; sticky: false; }>
>                  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

/[𝘈-𝘡][𝘡-𝘈]/v;
>/[𝘈-𝘡][𝘡-𝘈]/v : RegExp<["𝘈𝘡" | "𝘉𝘡" | "𝘊𝘡" | "𝘋𝘡" | "𝘌𝘡" | "𝘍𝘡" | "𝘎𝘡" | "𝘏𝘡" | "𝘐𝘡" | "𝘑𝘡" | "𝘒𝘡" | "𝘓𝘡" | "𝘔𝘡" | "𝘕𝘡" | "𝘖𝘡" | "𝘗𝘡" | "𝘘𝘡" | "𝘙𝘡" | "𝘚𝘡" | "𝘛𝘡" | "𝘜𝘡" | "𝘝𝘡" | "𝘞𝘡" | "𝘟𝘡" | "𝘠𝘡" | "𝘡𝘡"], undefined, { hasIndices: false; global: false; ignoreCase: false; multiline: false; dotAll: false; unicode: false; unicodeSets: true; sticky: false; }>
>                  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

/[\u{1D608}-\u{1D621}][\u{1D621}-\u{1D608}]/;
>/[\u{1D608}-\u{1D621}][\u{1D621}-\u{1D608}]/ : RegExp<["𝘈𝘡" | "𝘉𝘡" | "𝘊𝘡" | "𝘋𝘡" | "𝘌𝘡" | "𝘍𝘡" | "𝘎𝘡" | "𝘏𝘡" | "𝘐𝘡" | "𝘑𝘡" | "𝘒𝘡" | "𝘓𝘡" | "𝘔𝘡" | "𝘕𝘡" | "𝘖𝘡" | "𝘗𝘡" | "𝘘𝘡" | "𝘙𝘡" | "𝘚𝘡" | "𝘛𝘡" | "𝘜𝘡" | "𝘝𝘡" | "𝘞𝘡" | "𝘟𝘡" | "𝘠𝘡" | "𝘡𝘡"], undefined, { hasIndices: false; global: false; ignoreCase: false; multiline: false; dotAll: false; unicode: false; unicodeSets: false; sticky: false; }>
>                                             : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

/[\u{1D608}-\u{1D621}][\u{1D621}-\u{1D608}]/u;
>/[\u{1D608}-\u{1D621}][\u{1D621}-\u{1D608}]/u : RegExp<["𝘈𝘡" | "𝘉𝘡" | "𝘊𝘡" | "𝘋𝘡" | "𝘌𝘡" | "𝘍𝘡" | "𝘎𝘡" | "𝘏𝘡" | "𝘐𝘡" | "𝘑𝘡" | "𝘒𝘡" | "𝘓𝘡" | "𝘔𝘡" | "𝘕𝘡" | "𝘖𝘡" | "𝘗𝘡" | "𝘘𝘡" | "𝘙𝘡" | "𝘚𝘡" | "𝘛𝘡" | "𝘜𝘡" | "𝘝𝘡" | "𝘞𝘡" | "𝘟𝘡" | "𝘠𝘡" | "𝘡𝘡"], undefined, { hasIndices: false; global: false; ignoreCase: false; multiline: false; dotAll: false; unicode: true; unicodeSets: false; sticky: false; }>
>                                              : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

/[\u{1D608}-\u{1D621}][\u{1D621}-\u{1D608}]/v;
>/[\u{1D608}-\u{1D621}][\u{1D621}-\u{1D608}]/v : RegExp<["𝘈𝘡" | "𝘉𝘡" | "𝘊𝘡" | "𝘋𝘡" | "𝘌𝘡" | "𝘍𝘡" | "𝘎𝘡" | "𝘏𝘡" | "𝘐𝘡" | "𝘑𝘡" | "𝘒𝘡" | "𝘓𝘡" | "𝘔𝘡" | "𝘕𝘡" | "𝘖𝘡" | "𝘗𝘡" | "𝘘𝘡" | "𝘙𝘡" | "𝘚𝘡" | "𝘛𝘡" | "𝘜𝘡" | "𝘝𝘡" | "𝘞𝘡" | "𝘟𝘡" | "𝘠𝘡" | "𝘡𝘡"], undefined, { hasIndices: false; global: false; ignoreCase: false; multiline: false; dotAll: false; unicode: false; unicodeSets: true; sticky: false; }>
>                                              : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

/[\uD835\uDE08-\uD835\uDE21][\uD835\uDE21-\uD835\uDE08]/;
>/[\uD835\uDE08-\uD835\uDE21][\uD835\uDE21-\uD835\uDE08]/ : RegExp<["��" | "𝘡" | "𝘈" | "��" | "��" | "��" | "��" | "��" | "��"], undefined, { hasIndices: false; global: false; ignoreCase: false; multiline: false; dotAll: false; unicode: false; unicodeSets: false; sticky: false; }>
>                                                         : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

/[\uD835\uDE08-\uD835\uDE21][\uD835\uDE21-\uD835\uDE08]/u;
>/[\uD835\uDE08-\uD835\uDE21][\uD835\uDE21-\uD835\uDE08]/u : RegExp<["𝘈𝘡" | "𝘉𝘡" | "𝘊𝘡" | "𝘋𝘡" | "𝘌𝘡" | "𝘍𝘡" | "𝘎𝘡" | "𝘏𝘡" | "𝘐𝘡" | "𝘑𝘡" | "𝘒𝘡" | "𝘓𝘡" | "𝘔𝘡" | "𝘕𝘡" | "𝘖𝘡" | "𝘗𝘡" | "𝘘𝘡" | "𝘙𝘡" | "𝘚𝘡" | "𝘛𝘡" | "𝘜𝘡" | "𝘝𝘡" | "𝘞𝘡" | "𝘟𝘡" | "𝘠𝘡" | "𝘡𝘡"], undefined, { hasIndices: false; global: false; ignoreCase: false; multiline: false; dotAll: false; unicode: true; unicodeSets: false; sticky: false; }>
>                                                          : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

/[\uD835\uDE08-\uD835\uDE21][\uD835\uDE21-\uD835\uDE08]/v;
>/[\uD835\uDE08-\uD835\uDE21][\uD835\uDE21-\uD835\uDE08]/v : RegExp<["𝘈𝘡" | "𝘉𝘡" | "𝘊𝘡" | "𝘋𝘡" | "𝘌𝘡" | "𝘍𝘡" | "𝘎𝘡" | "𝘏𝘡" | "𝘐𝘡" | "𝘑𝘡" | "𝘒𝘡" | "𝘓𝘡" | "𝘔𝘡" | "𝘕𝘡" | "𝘖𝘡" | "𝘗𝘡" | "𝘘𝘡" | "𝘙𝘡" | "𝘚𝘡" | "𝘛𝘡" | "𝘜𝘡" | "𝘝𝘡" | "𝘞𝘡" | "𝘟𝘡" | "𝘠𝘡" | "𝘡𝘡"], undefined, { hasIndices: false; global: false; ignoreCase: false; multiline: false; dotAll: false; unicode: false; unicodeSets: true; sticky: false; }>
>                                                          : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

